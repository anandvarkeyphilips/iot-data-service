image: maven:3.6.3-openjdk-8-slim

variables:
  MAVEN_CLI_OPTS: "-s assembly/.m2/settings.xml --no-transfer-progress"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

cache:
  paths:
    - .m2/repository/

stages:
  - build
  - publish-docker-image
  - deploy
  - api-testing

build-format-test-verify:
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS install
  artifacts:
    paths:
      - target/
    expire_in: 1 hour

docker-hub-registry-publish:
  stage: publish-docker-image
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  cache: {}
  variables:
    CI_REGISTRY: "https://index.docker.io/v1/"
    CI_REGISTRY_USER: ${VARKEYS_DOCKERHUB_DOCKER_USERNAME}
    CI_REGISTRY_PASSWORD: ${VARKEYS_DOCKERHUB_DOCKER_ACCESS_TOKEN}
    CI_REGISTRY_IMAGE: "docker.io/${GITLAB_USER_LOGIN}/iot-data-service"
    CI_COMMIT_TAG: "should be fetched from pom.xml"
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD | base64)\"}}}" > /kaniko/.docker/config.json
    - CI_COMMIT_TAG=$(grep -m1 '<version>' pom.xml |cut -d '<' -f2  |cut -d '>' -f2 )
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG --destination $CI_REGISTRY_IMAGE:latest

deploy-to-staging-environment:
  stage: deploy
  cache: {}
  dependencies: []
  script:
    - mvn $MAVEN_CLI_OPTS azure-webapp:deploy

api-testing-in-staging-environment:
  stage: api-testing
  image: "registry.gitlab.com/varkeys-docker-containers/cicd-build-helper:1.0.0"
  cache: {}
  dependencies: []
  script:
    - newman run "assembly/postman-scripts/DNS Server Service.postman_collection.json" -e "assembly/postman-scripts/dns-server-service-prod.postman_environment.json"